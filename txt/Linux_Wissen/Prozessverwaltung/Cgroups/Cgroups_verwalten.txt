Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2012-01-17T12:24:14+01:00

====== Cgroups verwalten ======
Created Dienstag 17 Januar 2012

* In jeder Cgroup können für die entsprechenden Subsysteme gesetzt werden

**vorhandene Cgroups anzeigen**
''cat /proc/cgroups''
[[Linux Wissen:FHS:proc]]

**cgset <Parameter>=<wert> <Cgroup Pfad relativ zur Hierarchie> **
→ Setzen von Subsystemparametern 
→ der Ausführende muss über die entsprechenden Berechtigungen für diese Cgroup verfügen
[[Cgroups erstellen und löschen]]
[[Linux Wissen:Dateien verwalten:Zugriffsrechte]]



**cgexec**

**cgclassify**

--
cgclassify (1)       - move running task(s) to given cgroups
cgclear (1)          - unload the cgroup filesystem
cgconfig.conf (5)    - libcgroup configuration file
cgcreate (1)         - create new cgroup(s)
lscgroup (1)
lssubsys (1)

1.6 How do I use cgroups ?
--------------------------

To start a new job that is to be contained within a cgroup, using
the "cpuset" cgroup subsystem, the steps are something like:

 1) mount -t tmpfs cgroup_root /sys/fs/cgroup
 2) mkdir /sys/fs/cgroup/cpuset
 3) mount -t cgroup -ocpuset cpuset /sys/fs/cgroup/cpuset
 4) Create the new cgroup by doing mkdir's and write's (or echo's) in
    the /sys/fs/cgroup virtual file system.
 5) Start a task that will be the "founding father" of the new job.
 6) Attach that task to the new cgroup by writing its pid to the
    /sys/fs/cgroup/cpuset/tasks file for that cgroup.
 7) fork, exec or clone the job tasks from this founding father task.

For example, the following sequence of commands will setup a cgroup
named "Charlie", containing just CPUs 2 and 3, and Memory Node 1,
and then start a subshell 'sh' in that cgroup:

  mount -t tmpfs cgroup_root /sys/fs/cgroup
  mkdir /sys/fs/cgroup/cpuset
  mount -t cgroup cpuset -ocpuset /sys/fs/cgroup/cpuset
  cd /sys/fs/cgroup/cpuset
  mkdir Charlie
  cd Charlie
  /bin/echo 2-3 > cpuset.cpus
  /bin/echo 1 > cpuset.mems
  /bin/echo $$ > tasks
  sh
  # The subshell 'sh' is now running in cgroup Charlie
  # The next line should display '/Charlie'
  cat /proc/self/cgroup
