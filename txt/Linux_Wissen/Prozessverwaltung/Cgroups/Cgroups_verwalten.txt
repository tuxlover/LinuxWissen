Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2012-01-17T12:24:14+01:00

====== Cgroups verwalten ======
Created Dienstag 17 Januar 2012

* In jeder Cgroup können für die entsprechenden Subsysteme gesetzt werden

**vorhandene Cgroups anzeigen**
''cat /proc/cgroups''

**lscgroup **→ auflisten aller vorhandenen Cgroups
[[Linux Wissen:FHS:proc]]

**Kontrollgruppe anzeigen die zu einem Prozess gehört**
''ps -O cgroups''
[[Prozessverwaltung:ps]]

**PID anzeigen, die einer CGroup zugeordnet ist:**
''cat /proc/PID/cgroup''

=== Parameter für Subsysteme in Kontrollgruppen einstellen ===
* entweder mit dem **cgset **Befehl oder durch beschreiben der Pseudodatei in die Kontrllgruppe der eingehängten Hierarchie:
**echo <Wert> > <Hierarchie>/<Cgroup>/<Subsystem>.<Parameter>**

//Beispiel://
''echo 0-1 > /cgroups/cpuset/groupA/cpuset.cpus''

**cgset <Subsystem>.<Parameter>=<wert> <Cgroup Pfad relativ zur Hierarchie> | /**
→ Setzen von Subsystemparametern 
→ der Ausführende muss über die entsprechenden Berechtigungen für diese Cgroup verfügen
**→ **wenn als Pfad / verwendet wird, wird der Parameter für die Rootgruppe dieser Hierarchie gesetzt
**-r **→ rekursiv anwenden
**--copy-from <Quelle Cgroup Pfad>  <Ziel Quellcodepfad>**

=== ACHTUNG: ===
__Für die Root-CGroup einer Hierarchie können nur spezifische Werte gesetzt werden. Alle Der Root Gruppe Unterliegenden Gruppen hängen von den Basis Subsystems Einstellungen der Root-Cgroup ab.__

//Beispiele://
Für die Cgroup httpd_min innerhalb der //cpuacct// beinhaltenden Hierarchie deb Parameter //usage// festlegen
''cgset -r cpuacct.usage=0 httpd_min''

Rekursiv für die Root-Gruppe einer Hierarchie den //cpuacct.usage //Parameter setzen
__Da jedes Subsystem nur einmal verwendet werden kann, ist auch klar welche Hierarchie angesprochen wird__
[[Regeln]]
''cgset -r cpuacct.usage=0 /''

Gesetzte Parameter aus einer Cgroup in eine andere Cgroup kopieren
''cgset --copy-from httpd_min/ httpd_user/''
[[Cgroups erstellen und löschen]]
[[Linux Wissen:Dateien verwalten:Zugriffsrechte]]

=== Ein bestehenden Prozess in eine CGroup verschieben ===
* durch verschieben der PID in die //tasks //Datei
**echo <PID> > <absoluter Cgroup Pfad>/tasks**

//Beispiel://
''echo 1242 > /cgroups/mem_cpu/httpd_min/tasks'' 

**cgclassify -g <Subsystem>,...|*:<relativ zur Hierarchie glegener Pfad zur Cgroup> <PID>,...**
→ einen oder mehrere Prozesses mit den entsprechenden PIDs in eine Cgroup verschieben
**--sticky **→ Option muss vor einer PID stehen
                → alle Unterprozesses dieses Prozess werden der gleichen Cgroup zugeordnet

**--cancel-sticky **→ Option muss vor einer PID stehen
                             → alle Unterprozesse dieses Porzess sind nicht mehr länger dieser Cgroup zugehörig wie sein Vater

=== ACHTUNG: ===
__Falls der __**cgred **__Daemon läuft, werden Zuweisungen von__ **cgclassify **__die Einstellungen in__ //*/etc/cgrules.conf //__überschreiben.__
[[Prozessverwaltung]]
[[cgconfig und cgred]]
[[Linux Wissen:FHS:etc:cgrules.conf]]

//Beispiel: //
Die Befehle der PID 1242 und 2310 in die Cgroup httpd_min verschieben, dazu wird 2310 auf sticky gesetzt
''cgclassify -g cpu,memory:httpd_min 1242 --sticky 2310''

=== Ein Prozess sofort in eine CGroup verschieben ===
* durch verwenden der $$ Variale und des **echo **Befehls
**echo $$ > <absoluter Cgroups Pfad>/tasks && <Befehl> <Optionen> <Parameter>**

//Beispiel://
dies würde den vim in die Gruppe mem_cpu Verlegen:
''echo $$ /cgroups/system/mem_cpu/user1/tasks && vim''

**cgexec -g <Subsystem>,...|*:<relativ zur Hierarchie gelegener Pfad zur Cgroup> <Befehl> <Optionen> <Parameter>**
→ einen Befehl ausführen und ihn alsTask dieser Cgroup zuordnen
**--sticky **→ auch alle Unterprozesse die dieser Befehl spawned dieser Cgroup zuordnen


=== Starten eines System Services in einer Cgroup ===
* einem Service der durch **systemd **oder **sys-V-init **verwaltet wird, kann beim Starten einer Cgroup zugeordnet werden
* dazu wird die Variable ''ControlGroup'' in einer der Konfigurationsdateien in //*/etc/sysconfig/<Dienst> gesetzt//
**ControlGroup="<subsystem>:<CGroup>"**
**CGROUP_DAEMON="<subsystem>:<Cgroup>" $$redhat**

[[Linux Wissen:Booten:Dienste:systemd]]
[[Linux Wissen:Booten:Dienste]]
