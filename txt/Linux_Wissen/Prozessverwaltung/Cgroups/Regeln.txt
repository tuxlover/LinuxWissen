Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2012-01-17T15:23:13+01:00

====== Regeln ======
Created Dienstag 17 Januar 2012


* für die Erstellung von Hierarchien und Subsystemen müssen bestimmte Regeln gelten

=== Regel 1 ===
* Ein **Subsystem** kann mit __genau einer__ **Hierarchie** verknüpft sein. 

=== Regel 2 ===
* Eine einzelne **Hierarchie **kann mit __mehereren__ **Subsystemen** verknüpft. 
{{~/Rule1.jpg}}
__Es herscht eine linkseindeutige Relation zwischen Subsystem und Hierarchie.__

//Beispiel://
* Das **cpu** Subsystem kann nur in der Hierarchie //cpu_mem //angelgelt werden. Gleichzeitig kann die Hierchie cpu_mem aber auch das Subsystem **mem **beinhalten.

=== Regel 3 ===
* Wird eine neue **Hierarchie** auf dem System erstellt, sind** alle Tasks** auf dem System__ Mitglieder der standard CGroup__ dieser __Hierarchie (__**Root Kontrollgruppe)**
* Jede **Task** kann__ Mitglied in genau einer Cgroup __**dieser** **Hierarchie** sein.
* Ein **Taks** kann in__ Mitglied mehreren Cgroups sein__, wenn sich diese in **verschiedenen Hierachien** befinden.
* Wird ein **Task** __Mitglied einer anderen Cgroup in der __**gleichen Hierarchie**__ zugeordnet__, wird sie aus der **ursprünglichen Cgroup **in **dieser** **Hierarchie** entfernt.
* Ein **Taks** kann __niemals Mitglied __in zwei **Cgroups derselben Hierachie sein.**

//Beispiel://
Der Apache Webserver Daemon httpd ist als **Task **einer __Cgroup__ in der **Hierarchie** //cpu_mem zugewiesen. //Gleichzeitig ist ein **Taks** mit einer __Cgroup__ in der **Hierarchie** //net// verknüpft. 

=== Regel 4 ===
* Da jeder **Taks ** ein Prozess ist, wird jeder neu erstellte Kindporzess dieses **Task **MItglied aller __Cgroups__ wie dessen Vaterprozess.
* Der untergeordnete Prozess kann als **Task** anderen __Cgroups__ zugewiesen werden, erbt aber immer die Eigenschaften seines Vaters und als solche auch seine __Cgroups__.
