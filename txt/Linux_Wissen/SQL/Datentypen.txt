Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2011-04-29T00:28:24+02:00

====== Datentypen ======
Created Freitag 29 April 2011

* effiziente Nutzung von verfügbaren Speicherplatz
* Gewährleistung besserer Datenintigrität
* Sortierreihenfolge

=== Zeichenbasiert ===
* bestehen aus Strings fester oder variabler Größe

**CHAR(N)**
→ eine Zeichenkette mit fest definierter Länge N 
→ maximale Länge 64KB
→ es wird immer die definierte Länge im Hauptspeicher reserviert

**VARCHAR(N)**
→ eine Zeichenkette variabler Länge
→ maximale Länge 64 KB
→ es wird immer nur die tatsächlich benutzte Größe im Hauptspeicher reserviert

**TinyText**
→ mehrere Zeichenketten 
→ 255 Zeichen

**Text | STRING**
→ mehrere Zeichenketten
→ 65.535 Zeichen

**MediumText**
→ mehrere Zeichenketten
→ 16.777.215 Zeichen

**LongText**
→ mehrere Zeichenketten
→ 4.294.967.295 Zeichen

=== Zahlenbasiert ===
**INTEGER**
→ 4 Byte bei der Adressierung ( 32^2 )

**Tinyint**
→ Wertebereich -128 -127
→ ohne Vorzeichen 0 - 255
→ ein Byte bei der Adressierung

**SmallInt**
→ zwei Byte bei der Adressierung

**MediumInt **
→ 3 Byte bei der Adressierung

** BIGINT**
→ 8 Byte bei der Adressierung

**Double(s,p) | Float(s,p)**
→ Fließkommazahlen mit Präzision nahe **p ** der Länge **s**
//Beispiel://
''Double(6,2) ''gibt folgende Zahlen 9999.99
''Double(9,4)'' gibt folgende Zahlen 99999.9999

=== Datums und Zeitbasierend ===
**Date** → **YY-MM-DD**

**Datetime **→ **YY-MM-DD:hh:mm:ss**

**Timestamp → **Unixtime artiges Datetimeformat

**Year **→ **YYYY**

**TIME **→ **hh:mm:ss**

=== Andere ===
**Bool **→ Datenwert, **true, false **oder **unknown**

**Array[N]**
→ Array der Länge N definieren
→ ein Attribut kann mehrere Werte haben
→ zum Beispiel kann ein Mensch mehrere Telefonnummern haben

**ROW**
→ Datentyp der eine Zeile innerhalb eines Array definiert
//Beispiel://
'''
CREATE ROW CUSTOMER (
CustID        INTEGER      PRIMARY KEY,    
LastName      CHARACTER VARYI )    
'''


**ENUM **
→ festlegen einer eingegrenzten Menge von Zeichen im Werte und Defintionsbereich

//Beispiel://
''gender ENUM('m','f')''
→ nur m oder f dürfen für den Eintrag in gender verwendet werden

**SET **''('StringA',...)''
→ festlegen einer eingegrenzten Menge von Zeichen
→ mehrfachnennun möglich

**AUTO_INCREMENT**
→ der Zähler wird selbsständig inkrementiert, nützlich für Primärschlüssel

=== Bit-Ketten ===
→ dient zur Speicherung von Dateien

**BIT(n) **
→ eine Bitkette mit n Bits

**VARBIT(n) **
→ variable Bitkette mit maximal n Bits

**BINARY**
→ binäre Dateien bis 255 Bits
→ feste Größe

**VARBINARY**
→ binäre Dateien bis 65535 Bits
→ variable Größe

**BLOB |TINYBLOB|MEDIUMBLOB|LONGBLOB**
→ binary large Object
→ für beliebig Große Dateien

=== NULL ===
→  leerer nicht bekannter Wert 
→ besitzt keine Speicheradresse und verbraucht daher auch keinen Speicherplatz
→ NULL != NULL
→ unbekannte Werte werden immer als ungleiche Werte behandelt

//Beispiele://
'''
CREATE TABLE testsample
'''
	'''
	(
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	zeile1 CHAR(5) CHARACTER SET utf8,
	zeile2 DATE DEFAULT '2011-12-12',
	PRIMARY KEY(id)
	) ENGINE=innodb;
	'''
